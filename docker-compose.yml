version: '3.8'
services:
  # Serviço da API
  api:
    build:
      context: ./api
    container_name: certificados-api-container
    environment:
      - PORT=5000
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/
      - DATABASE_NAME=certificados
      - JWT_SECRET=SDJFSFDSNJDSIFNSJKFNJDKSFJ
      - AMQP_URL=amqp://guest:guest@rabbitmq:5672/
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - certificados-network
  
  # Serviço do Worker
  worker:
    build:
      context: ./worker
    container_name: certificados-worker-container
    environment:
      - AMQP_URL=amqp://guest:guest@rabbitmq:5672/
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/
      - DATABASE_NAME=certificados
    volumes:
      - ./certificados-gerados:/app/certificados
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - certificados-network
    command: ["./scripts/wait-for-it.sh", "postgres:5432", "--", "./scripts/wait-for-it.sh", "rabbitmq:5672", "--", "node", "index.js"]
    
  # Serviço do Postgres
  postgres:
    image: postgres:13
    container_name: certificados-postgres-container
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=certificados
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql-scripts/tables.sql:/docker-entrypoint-initdb.d/tables.sql
    ports:
      - "5432:5432"
    networks:
      - certificados-network
  
  # Serviço do RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: certificados-rabbitmq-container
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - certificados-network

networks:
  certificados-network:
    driver: bridge

volumes:
  postgres-data: